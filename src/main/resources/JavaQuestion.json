[
  {
    "question": "Расскажите про String в Java.",
    "answer": "Строка — неизменяемый объект. Чтобы инициализировать строку, после оператора присваивания (=) в двойных кавычках пишем текст. Сложение строк программисты называют конкатенацией."
  },
  {
    "question": "Расскажите о контракте между equals и hashCode в Java?",
    "answer": "1.\tЕсли два объекта равны (т. е. метод equals() возвращает true), у них должен быть одинаковый хеш-код.\n2.\tЕсли метод hashCode() вызывается несколько раз на одном и том же объекте, каждый раз он должен возвращать одно и то же число.\n3.\tХеш-код может быть одинаковым у двух разных объектов.\n"
  },
  {
    "question": "Что такое сигнатура метода?",
    "answer": "это имя и параметры метода, причем порядок параметров внутри скобок имеет значение."
  },
  {
    "question": "Можем ли мы переопределить метод toString() для Enum?",
    "answer": "Да"
  },
  {
    "question": "Что будет, если не переопределять метод toString() для Enum?",
    "answer": "Ничего критичного, поскольку абстрактная основа класса Enum сделает это за вас, и вернёт имя, являющееся именем экземпляра Enum."
  },
  {
    "question": "Какая есть иерархия исключений?",
    "answer": "Во главе всего стоит Throwable. Этот класс является родителем всего «выбрасываемого» (от англ. throw — бросать) в Java, т. е. всех ошибок.\nДалее эти самые ошибки делятся на две большие группы.\n Error (ошибка) представляет собой критические ошибки, возникающие, когда кончается память. Exception (исключение) представляет собой ошибки, которые напрямую связаны с кодом. Класс Exception делится на два больших типа исключений: проверяемые и непроверяемые исключения."
  },
  {
    "question": "Для чего нужен Swagger?",
    "answer": "Swagger — это фреймворк для спецификации RESTful API. Его прелесть заключается в том, что он дает возможность не только интерактивно просматривать спецификацию, но и отправлять запросы — так называемый Swagger UI. С ним вы сможете открыть страницу в браузере со списком эндпоинтов (Endpoint) приложения и делать запросы."
  },
  {
    "question": "Что такое IoC и DI?",
    "answer": "IoC — инверсия контроля. Этот принцип подразумевает, что мы передаем некой сущности ответственность за создание объектов и контроль над ними, т. е. хранение. DI — инъекция зависимостей. Данный принцип подразумевает, что мы не хотим в нашем классе заниматься созданием инфраструктурных объектов."
  },
  {
    "question": "Как сравнить две строки в Java и/или отсортировать их?",
    "answer": "Для сравнения строк используют метод equals(). Этот метод в качестве параметра принимает другую строку и возвращает true/false."
  },
  {
    "question": "Чем отличаются объектные типы от примитивных типов данных?",
    "answer": "Объекты хранятся в отдельном месте, переменная объектного типа не содержит объект, это лишь ссылка на него. Примитивные же типы хранятся прямо в недрах объектов, так что переменная примитивного типа представляет собой именно хранилище соответствующих данных, а не ссылку."
  },
  {
    "question": "Можно ли создать Enum без экземпляров объектов?",
    "answer": "Да, можно создать Enum без экземпляров, например создавая утилитарный класс."
  },
  {
    "question": "Можем ли мы указать конструктор внутри Enum?",
    "answer": "Да, но конструктор у перечисления может быть только приватный."
  },
  {
    "question": "Какая разница между checked и unchecked, exception, throw, throws?",
    "answer": "Проверяемые исключения являются прямыми наследниками класса Exception. Непроверяемые исключения являются прямыми наследниками класса RuntimeException. Чтобы в коде «выбросить» свое исключение, нужно написать следующую конструкцию:\nthrow new.\n В таких ситуациях, когда мы не хотим обрабатывать исключение внутри того метода, где это проверяемое исключение кидается, мы обязаны дописать к сигнатуре нашего метода throws."
  },
  {
    "question": "Что такое «HTML»?",
    "answer": "HTML — стандартизированный язык гипертекстовой разметки документов для просмотра веб-страниц в браузере."
  },
  {
    "question": "Дайте определение Spring. В чем преимущества Spring?",
    "answer": "Spring - огромный Фреймворк, содержащий решения на все случаи жизни. Но все веб-приложения разные, и не всегда нам нужно все изобилие решений.\nДля этого Spring Framework разделён на модули\n"
  },
  {
    "question": "Что такое IoC и DI?",
    "answer": "IoC — инверсия контроля. Этот принцип подразумевает, что мы передаем некой сущности ответственность за создание объектов и контроль над ними, т. е. хранение. DI — инъекция зависимостей. Данный принцип подразумевает, что мы не хотим в нашем классе заниматься созданием инфраструктурных объектов."
  },
  {
    "question": "Какие есть способы создания объекта String? Где он создается?",
    "answer": "Чтобы инициализировать строку, после оператора присваивания (=) в двойных кавычках пишем текст. Так как String является объектом, мы можем создать ее с помощью оператора new. Когда у нас есть символьный массив, а мы хотим превратить его в строку. Из массива байтов мы тоже можем собрать строку."
  },
  {
    "question": "Что такое конструкторы?",
    "answer": "В конструкторе мы устанавливаем значение переменным, которые необходимы для создания объекта нашего класса"
  },
  {
    "question": "Может ли Enum расширить (extend) класс?",
    "answer": "они не могут быть наследниками других классов и от них наследоваться нельзя."
  },
  {
    "question": "Что делает метод ordinal() в Enum?",
    "answer": "Метод ordinal() (порядковый) возвращает порядок, в котором экземпляры Enum обозначены внутри Enum."
  },
  {
    "question": "В чём разница между error и exception?",
    "answer": "Error (ошибка) представляет собой критические ошибки, возникающие, когда кончается память. Exception (исключение) представляет собой ошибки, которые напрямую связаны с кодом."
  },
  {
    "question": "Что такое REST API и чем оно отличается от другого API?",
    "answer": "Приложения, которые построены с учетом правил REST, называются RESTful-приложениями."
  },
  {
    "question": "Что такое библиотеки? Какие библиотеки вы знаете?",
    "answer": "Библиотеки в Java — набор классов, позволяющих упростить и ускорить работу разработчика в написании шаблонного кода. Apache Commons Lang3: Класс StringUtils \nОблегчает работу со строками, а также имеет массу проверок. Класс NumberUtils\nПозволяет находить минимум и максимум среди любого количества переменных, а также удобно конвертировать строку в любой из числовых типов.\n Jackson, которая помогает Spring превращать ваши объекты в JSON."
  },
  {
    "question": "Что такое IoC и DI?",
    "answer": "IoC — инверсия контроля. Этот принцип подразумевает, что мы передаем некой сущности ответственность за создание объектов и контроль над ними, т. е. хранение. DI — инъекция зависимостей. Данный принцип подразумевает, что мы не хотим в нашем классе заниматься созданием инфраструктурных объектов."
  },
  {
    "question": "Дайте определение сеттерам. Расскажите, для чего они нужны?",
    "answer": "Сеттер (от англ. set — устанавливать) — это метод, с помощью которого мы меняем или задаем значение переменной."
  },
  {
    "question": "Что такое область видимости?",
    "answer": "Область видимости переменных (scope) — это свойство переменных, которое определяет, можно ли использовать переменную в тех или иных частях кода."
  },
  {
    "question": "Может ли Enum реализовывать (implement) интерфейс?",
    "answer": "Да, Enum может наследовать интерфейсы. Поскольку Enum тип схож с классом и интерфейсом, он может наследовать интерфейс."
  },
  {
    "question": "Дайте краткую характеристику класса Object в Java.",
    "answer": "Самый главный класс языка Java, который является родителем всех классов, создаваемых разработчиками или уже существующих. Все они неявно наследуют класс Object и реализуют его методы, некоторые из которых можно переопределить."
  },
  {
    "question": "Какие знаете особенности использования оператора try... catch?",
    "answer": "Обработка исключений в Java построена на конструкции из трех слов: try, catch и finally."
  },
  {
    "question": "Что такое CRUD? Раскройте аббревиатуру и расскажите значение каждой буквы.",
    "answer": "Creat - создать, Read - читать, Update - редактировать, Delete - удалять."
  },
  {
    "question": "Что такое «HTML»?",
    "answer": "HTML — стандартизированный язык гипертекстовой разметки документов для просмотра веб-страниц в браузере."
  },
  {
    "question": "Что такое внедрение зависимостей?",
    "answer": "Dependency Injection - если мы не хотим в нашем классе заниматься созданием инфраструктурных объектов."
  },
  {
    "question": "Какие методы называются геттерами? Что они делают?",
    "answer": "Геттер (от англ. get — получать) — это метод, с помощью которого мы получаем значение переменной, т. е. ее читаем."
  },
  {
    "question": "Какая функция у оператора return?",
    "answer": "У оператора две функции:\n1.\tПрервать выполнение метода. Эту функцию оператор выполняет всегда.\n2.\tВернуть результат в то место (в ту строку), где метод был вызван. Эту функцию оператор выполняет в тех случаях, когда значение возвращаемое.\n"
  },
  {
    "question": "Дайте краткую характеристику Enum в Java.",
    "answer": "Потребность в использовании набора некоторых констант, которые логически связаны между собой."
  },
  {
    "question": "Для чего используют equals и hashCode в Java?",
    "answer": "Для сравнения объектов между собой"
  },
  {
    "question": "Дайте определение понятию exception (исключительная ситуация).",
    "answer": "Когда код, который мы написали, не может отработать так, как был задуман."
  },
  {
    "question": "Что такое первичный ключ?",
    "answer": "Первичный ключ — это поле или набор полей со значениями, которые являются уникальными для всей таблицы. Значения ключа могут использоваться для обозначения всех записей, при этом каждая запись имеет отдельное значение ключа. Каждая таблица может содержать только один первичный ключ."
  },
  {
    "question": "Расскажите про библиотеку Apache Commons. Для чего она нужна и как её подключать?",
    "answer": "Класс StringUtils \nОблегчает работу со строками, а также имеет массу проверок. Класс NumberUtils\nПозволяет находить минимум и максимум среди любого количества переменных, а также удобно конвертировать строку в любой из числовых типов. Подключение зависимости можно через Maven/Gradle, либо без системы сборки"
  },
  {
    "question": "Дайте определение Spring. В чем преимущества Spring?",
    "answer": "Spring - огромный Фреймворк, содержащий решения на все случаи жизни. Но все веб-приложения разные, и не всегда нам нужно все изобилие решений.\nДля этого Spring Framework разделён на модули\n"
  },
  {
    "question": "Для чего применяется метод toString?",
    "answer": "Чтобы использовать строковое представление того или иного объекта."
  },
  {
    "question": "Методы каких типов бывают? Перечислите все, которые знаете, и дайте определение каждому.",
    "answer": "По модификатору доступа (private, public, default, protected), статические и нестатические, по типу возвращаемого значения."
  },
  {
    "question": "В чем разница между абстрактным классом и интерфейсом в Java?",
    "answer": "Абстрактный класс и как и интерфейс имеет абстрактные методы, но нет переменных класса."
  },
  {
    "question": "Расскажите о контракте между equals и hashCode в Java?",
    "answer": "1.\tЕсли два объекта равны (т. е. метод equals() возвращает true), у них должен быть одинаковый хеш-код.\n2.\tЕсли метод hashCode() вызывается несколько раз на одном и том же объекте, каждый раз он должен возвращать одно и то же число.\n3.\tХеш-код может быть одинаковым у двух разных объектов.\n"
  },
  {
    "question": "Чем отличаются HashSet от HashMap?",
    "answer": "HashSet - это реализация интерфейса Set, который не допускает дублирования значения. Главное, что объекты, которые хранятся в HashSet, должны переопределять equals() для проверки на равенство, а методы hashCode() для отсутствия повторяющегося значения хранятся в нашем наборе. HashMap - это реализация интерфейса Map, который сопоставляет ключ со значением. Дубликаты ключей на карте не допускаются."
  },
  {
    "question": "Что такое библиотеки? Какие библиотеки вы знаете?",
    "answer": "Библиотеки в Java — набор классов, позволяющих упростить и ускорить работу разработчика в написании шаблонного кода. Apache Commons Lang3: Класс StringUtils \nОблегчает работу со строками, а также имеет массу проверок. Класс NumberUtils\nПозволяет находить минимум и максимум среди любого количества переменных, а также удобно конвертировать строку в любой из числовых типов.\n Jackson, которая помогает Spring превращать ваши объекты в JSON."
  },
  {
    "question": "Что такое контроллер?",
    "answer": "Для обращения к нашему приложению из вне, нам нужно написать сущность-контроллер, которая должна хранить в себе методы, вызываемые при обращении браузера по определенному адресу, и запускать их."
  },
  {
    "question": "Зачем нужны сервисы? В чем их отличие от контроллеров?",
    "answer": ""
  },
  {
    "question": "Дайте определение классу в Java.",
    "answer": ""
  },
  {
    "question": "Что такое модификаторы доступа в Java? Назовите их. Для чего используются?",
    "answer": ""
  },
  {
    "question": "Что такое interface? Может ли быть final interface?",
    "answer": ""
  },
  {
    "question": "Что такое Postman? Для чего он нужен?",
    "answer": ""
  },
  {
    "question": "В чём преимущество ArrayList перед массивом?",
    "answer": ""
  },
  {
    "question": "Из чего состоит HTTP-запрос?",
    "answer": ""
  },
  {
    "question": "Дайте определение Spring. В чем преимущества Spring?",
    "answer": ""
  },
  {
    "question": "Что такое API и зачем нужно?",
    "answer": ""
  },
  {
    "question": "Почему доступ по элементу в массиве происходит за O(1)?",
    "answer": ""
  },
  {
    "question": "Расскажите о принципе наследования в ООП? Зачем он нужен?",
    "answer": ""
  },
  {
    "question": "Что такое abstract? Абстрактный класс? Абстрактный метод?",
    "answer": ""
  },
  {
    "question": "Чем отличается HTTPS от HTTP?",
    "answer": ""
  },
  {
    "question": "Что будет, если не переопределить equals и hashCode?",
    "answer": ""
  },
  {
    "question": "Как отсортировать коллекцию элементов?",
    "answer": ""
  },
  {
    "question": "Что такое брейкпоинт? Как им пользоваться?",
    "answer": ""
  },
  {
    "question": "Что такое API и зачем нужно?",
    "answer": ""
  },
  {
    "question": "Что такое массив?",
    "answer": "Массив — это структура данных, которая позволяет хранить несколько значений одного типа."
  },
  {
    "question": "Дайте определение принципа полиморфизма в ООП? Как работает полиморфизм?",
    "answer": "Данный принцип описывает механизм работы с разными типами объектов как с одним. Любой прямой или косвенный наследник класса может быть использован в качестве экземпляра своего родителя. За набор полей и методов отвечает тип ссылки. За код, который выполняется при вызове этих методов, отвечает уже реализация (то, что после =)."
  },
  {
    "question": "Что означает ключевое слово final?",
    "answer": "final — это модификатор, который позволяет объявлять константные поля в классе. Если у вас есть некоторое свойство проектируемого вами объекта, значение которого не будет меняться, то вы можете воспользоваться этим модификатором."
  },
  {
    "question": "Какие значения мы получим, если у нас не переопределены equals и hashCode?",
    "answer": "Если не переопределять эти методы, то могут появиться одинаковые значения, которые будут сравниваться между собой по умолчанию, оператором ==."
  },
  {
    "question": "Зачем нужны сервисы? В чем их отличие от контроллеров?",
    "answer": "Для обращения к нашему приложению из вне, нам нужно написать сущность-контроллер, которая должна хранить в себе методы, вызываемые при обращении браузера по определенному адресу, и запускать их. . Сервисы содержат набор полей и методов, необходимых для выполнения логики. Задача сервиса — получить запрос от контроллера с пришедшими в контроллер параметрами и провести необходимые для выполнения задачи вычисления, затем вернуть результат."
  },
  {
    "question": "Что такое дебаг-режим? Зачем он нужен?",
    "answer": "Просмотр текущего состояния приложения. Достигается это за счет того, что мы можем сделать паузу в каком-то определенном месте кода, остановить наше приложение и посмотреть, а какие значения у переменных на текущий момент, какой стек вызовов (в каком порядке выполняются действия) и, самое важное, мы можем выполнить некоторый код, который не повлияет на наше основное приложение, но зато мы сможем проверить, как эта часть кода работает в текущий момент, а также можем вызвать какой-то метод или сделать какое-то вычисление, для того, чтобы найти проблему."
  },
  {
    "question": "Что такое «HTML»?",
    "answer": "HTML — стандартизированный язык гипертекстовой разметки документов для просмотра веб-страниц в браузере."
  },
  {
    "question": "Чем отличается HTTPS от HTTP?",
    "answer": "S означает Security, т. е. данные будут передаваться в зашифрованном виде."
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  },
  {
    "question": " ",
    "answer": ""
  }
]